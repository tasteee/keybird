.MiniChordBlock {
	padding: 4px;
	border: 1px solid var(--sand-8);
	border-radius: 4px;
	/* background: linear-gradient(to top right, var(--sand-a1), var(--sand-a2)); */

	.coloredCircle {
		width: 8px;
		height: 8px;
		border-radius: 50%;
		background: var(--accented11);
	}
}

.MiniChordBlock {
	padding: 4px;
	min-width: 46px;
	border-radius: 4px;
	border: 1px solid var(--accent-a11) !important;
	background: linear-gradient(to top right, var(--accent-a1), var(--accent-a2)) !important;
	will-change: background-color, border-color;
	transition:
		background-color 0.2s ease-in-out,
		border-color 0;2s ease-in-out;
}

.MiniChordBlock.isSelected {
	box-shadow: 0px 6px 32px -4px var(--accent-a7);
	z-index: 10;
}

/* .ChordProgression:has(.isSelected) .TimingWrapper:not(.isSelected) {
	opacity: 0.8;
} */

.ChordProgression .isSelected ~ * {
	/* background: yellow; after */
	opacity: 0.4;
}

.ChordProgression :has(~ .isSelected) {
	/* background: orange; before */
	opacity: 0.4;
}
